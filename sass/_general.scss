:root {
  --body-background: hsl(35, 33%, 76%);
  --warm-brown-light: rgb(194, 168, 133);
  --warm-brown-dark-opacity: hsl(35, 48%, 12%,0.525);
  --warm-brown-dark: hsl(35, 48%, 12%);
  --calm-blue-10: #0f396b;
  --calm-blue-hover: #0a85d6;
  --forest-green-magic: hsl(110, 52%, 28%);
  --forest-green-magic-dark: hsl(140, 100%, 20%);
  --accent-2: hsl(10, 80%, 30%);

  --main-family: "Lora", serif;
  --sub-family: 'Oswald', sans-serif;

  --about-section-margin-top: 70vh;
  --section-margin-top: 30rem;
}

* {
  padding: 0;
  margin: 0;
  border: 0 solid;
  box-sizing: border-box;
}

*::before,
*::after {
  padding: inherit;
  margin: inherit;
  border: 0 solid;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  font-family: var(--main-family);
  scroll-behavior: smooth;
  overflow-x: hidden;
}

body {
  max-width: 140rem;
  background-color: var(--body-background);
  position: relative;
  overflow-x: hidden;
}

.grid-container {
  display: grid;
  /*nav (hero,about-us) goal (inside-menu-events-testimo-map) footer*/
  grid-template-columns:
    [full-start] minmax(6rem, 1fr) [centre-start] repeat(
      8,
      [col-start] minmax(min-content, 14rem) [col-end]
    )
    [centre-end] minmax(6rem, 1fr) [full-end];
}

.btn {
  display: inline-block;
  background-image: linear-gradient(
    270deg,
    var(--calm-blue-10) 0%,
    var(--calm-blue-10) 50%,
    var(--calm-blue-hover) 50%,
    var(--calm-blue-hover) 100%
  );
  background-size: 200%;
  background-position: 100% 100%;
  text-align: center;
  border-radius: 3rem;
  transition: all 0.3s ease;

  &:hover,
  &:active {
    background-position: left;
  }

  &:active {
    transform: translateY(0.2rem);
    box-shadow: none;
  }
}

.display-none {
  display: none;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(1px);
  z-index: 1000;
  transition: all 0.5s;
}

.blue-highlight {
  color: var(--calm-blue-10);
}

.success,
.error {
  position: fixed;
  top: -12rem;
  left: 50%;
  transform: translateX(-50%);
  display: block;
  color: white;
  font-size: 1.8rem;
  font-family: var(--sub-family);
  letter-spacing: 0.06rem;
  line-height: 1.5;
  text-align: center;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  z-index: 20000;

}

.success {
  width: 40rem;
  height: 10rem;
  background-color: var(--forest-green-magic-dark);
  padding: 2rem;
  transition: all 0.5s ease-in;

  /*
    to make ny elemen fixed positioned depending on the window screen you must 
    change (use) the top-left-right-bottom values that you've set in pixels-rems into percentages and your elements will be fluid.
    Never use pixel-rems width values if you want your layout to be fluid.
  */

  @media screen and (max-width: 27.75em) {
    font-size: 1.6rem;
    width: 30rem;
  }

  @media screen and (max-width: 20.44em) {
    font-size: 1.4rem;
    width: 27rem;
  }

  @media screen and (max-width: 17em) {
    font-size: 1.2rem;
    font-weight: 500;
    width: 20rem;
  }
  
}

.error {
  width: 30rem;
  background-color: var(--accent-2);
  padding: 3rem;
  transition: all 0.8s ease-in;

}

section {
  position: relative;
}

p {
  max-width: 55ch;
}

a {
  text-decoration: none;
  display: block;
  color: inherit;
}

ul {
  display: inline-block;
  list-style: none;
}

li {
  display: inline-block;
}

img {
  display: block;
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}
